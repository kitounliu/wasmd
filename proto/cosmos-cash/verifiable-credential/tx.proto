syntax = "proto3";
package wasmd.verifiablecredential;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/CosmWasm/wasmd/x/verifiable-credential/types";

import "gogoproto/gogo.proto";
import "cosmos-cash/verifiable-credential/verifiable-credential.proto";


// Msg defines the identity Msg service.
service Msg {
  // IssueRegistrationCredential issue a new registration credential for a public entity
  rpc IssueRegistrationCredential(MsgIssueRegistrationCredential) returns (MsgIssueRegistrationCredentialResponse);
  // IssueUserCredential issue user credential to allow an account to transact
  rpc IssueUserCredential(MsgIssueUserCredential) returns (MsgIssueUserCredentialResponse);
  // IssueParameterCredential issue public parameters for anonymous credentials
  rpc IssueAnonymousCredentialSchema(MsgIssueAnonymousCredentialSchema) returns (MsgIssueAnonymousCredentialSchemaResponse);
  // UpdateSchemaAccumulatorState updates membership or non-membership state after adding or deleting members
  rpc UpdateAnonymousCredentialSchema(MsgUpdateAnonymousCredentialSchema) returns (MsgUpdateAnonymousCredentialSchemaResponse);
  // RevokeCredential a credential
  rpc RevokeCredential(MsgRevokeCredential) returns (MsgRevokeCredentialResponse);
}

// MsgIssueRegistrationCredential is used to issue new registration credential

message MsgIssueRegistrationCredential {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  wasmd.verifiablecredential.VerifiableCredential credential = 1;
  string owner = 2;
}

// MsgIssueRegistrationCredentialResponse reply for the IssueRegistartion call
message MsgIssueRegistrationCredentialResponse {}

// MsgIssueUserCredential defines sdk message to issue user credentials
message MsgIssueUserCredential {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  wasmd.verifiablecredential.VerifiableCredential credential = 1;
  string    owner = 2;
}

message MsgIssueUserCredentialResponse {}

// MsgIssueParameterCredential message contains data for public parameters credential
message MsgIssueAnonymousCredentialSchema {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  wasmd.verifiablecredential.VerifiableCredential credential = 1;
  string owner = 2;
}

// MsgIssueLicenseCredentialResponse reply for the issue license call
message MsgIssueAnonymousCredentialSchemaResponse {}

// MsgUpdateSchemaAccumulatorState message contains data for adding/deleting members from the state
message MsgUpdateAnonymousCredentialSchema {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  wasmd.verifiablecredential.VerifiableCredential credential = 1;
  string owner = 2;
}

// MsgUpdateSchemaAccumulatorStateResponse reply for the issue license call
message MsgUpdateAnonymousCredentialSchemaResponse {}

// MsgRevokeCredential
message MsgRevokeCredential {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string credential_id = 1;
  string owner = 2;
}

// MsgRevokeCredentialResponse
message MsgRevokeCredentialResponse {}

// MsgIssueCredential is used to issue new registration credential
// this message is used by other modules
message MsgIssueCredential {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  VerifiableCredential credential = 1;
  string owner = 2;
}

// MsgIssueCredentialResponse reply for the issue credential call
message MsgIssueCredentialResponse {}


